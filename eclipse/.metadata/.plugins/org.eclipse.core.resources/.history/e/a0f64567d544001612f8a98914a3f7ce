package com.forgewareinc.elrol.guiElevator;

import io.netty.buffer.ByteBuf;
import net.minecraft.block.Block;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.world.World;
import cpw.mods.fml.client.FMLClientHandler;
import cpw.mods.fml.common.network.simpleimpl.IMessage;
import cpw.mods.fml.common.network.simpleimpl.IMessageHandler;
import cpw.mods.fml.common.network.simpleimpl.MessageContext;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

public class ColoringPacket implements IMessage {

	static int x;
	static int y;
	static int z;
	private static int color;
	private static byte extra;
	
	
	public ColoringPacket(){}
	
	public ColoringPacket(int x, int y, int z, int value, byte extra){
		this.x = x;
		this.y = y;
		this.z = z;
		this.color = value;
		this.extra = extra;
	}
	
	public static void sendToServer(IMessage packet){
		ElevatorMain.packetSystem.instance().sendToServer(packet);
	}
	
	public static void send(int X, int Y, int Z, int i, byte extra){
		sendToServer(new ColoringPacket(X, Y, Z, i, extra));
	}
	
	@Override
	public void fromBytes(ByteBuf buf) {
		x = buf.readInt();
		y = buf.readInt();
		z = buf.readInt();
		color = buf.readInt();
		extra = buf.readByte();
		
	}

	@Override
	public void toBytes(ByteBuf buf) {
		buf.writeInt(x);
		buf.writeInt(y);
		buf.writeInt(z);
		buf.writeInt(color);
		buf.writeInt(extra);
	}
	
	@SideOnly(Side.CLIENT)
	public static void hpc(MessageContext ctx){
		handlePacket(FMLClientHandler.instance().getClient().thePlayer, ctx.side);
	}
	
	public static void handlePacket(EntityPlayer player, Side side){
		World world = player.worldObj;
		Block block = world.getBlock(x,y,z);
		int meta = world.getBlockMetadata(x, y, z);
		String name = "";
		
		if(world.getTileEntity(x, y, z) instanceof TileEntityElevator){
			TileEntityElevator tile = (TileEntityElevator)world.getTileEntity(x, y, z);
			name = tile.getName();
		}
		
		if(block != null && block instanceof Elevator){
			switch(color){
			case 0: block = ElevatorMain.elevatorBlack; break;
			case 1: block = ElevatorMain.elevatorRed; break;
			case 2: block = ElevatorMain.elevatorGreen; break;
			case 3: block = ElevatorMain.elevatorBrown; break;
			case 4: block = ElevatorMain.elevatorBlue; break;
			case 5: block = ElevatorMain.elevatorPurple; break;
			case 6: block = ElevatorMain.elevatorCyan; break;
			case 7: block = ElevatorMain.elevatorSilver; break;
			case 8: block = ElevatorMain.elevatorGray; break;
			case 9: block = ElevatorMain.elevatorPink; break;
			case 10: block = ElevatorMain.elevatorLime; break;
			case 11: block = ElevatorMain.elevatorYellow; break;
			case 12: block = ElevatorMain.elevatorLBlue; break;
			case 13: block = ElevatorMain.elevatorMagenta; break;
			case 14: block = ElevatorMain.elevatorOrange; break;
			case 15: block = ElevatorMain.elevatorWhite; break;
				default:
			}
			world.setBlock(x, y, z, block);
			world.setBlockMetadataWithNotify(x, y, z, meta, 2);
		}
	}
	
	public static class ColoringPacketHandler implements IMessageHandler<ColoringPacket, IMessage>{

		@Override
		public IMessage onMessage(ColoringPacket message, MessageContext ctx) {
			switch (ctx.side)
			{
			case CLIENT:
				hpc(ctx);
				break;
			case SERVER:
				handlePacket(ctx.getServerHandler().playerEntity, ctx.side);
				break;
				default:
			}
			
			return null;
			 
		}
	}
}
